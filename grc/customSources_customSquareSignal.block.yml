id: customSources_customSquareSignal
label: customSquareSignal
category: '[customSources]'

templates:
  imports: from gnuradio import customSources
  make: customSources.customSquareSignal(${sampling_freq}, int(${waveform}), ${frequency}, ${ampl}, ${offset}, ${phase}, ${duty_cycle})

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#     * default
parameters:
- id: waveform
  label: Waveform
  dtype: enum
  default: '0'
  options: ['0', '1']
  option_labels: ['Square', 'Triangle']

- id: sampling_freq
  label: Sampling Frequency
  dtype: real
  default: samp_rate

- id: frequency
  label: Frequency
  dtype: real
  default: 1000

- id: ampl
  label: Amplitude
  dtype: real
  default: 1

- id: offset
  label: Offset
  dtype: real
  default: 0

- id: phase
  label: Phase
  dtype: real
  default: 0

- id: duty_cycle
  label: Duty cycle
  dtype: real
  default: 0.5
#- id: ...
#  label: ...
#  dtype: ...

#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
#- label: ...
#  domain: ...
#  dtype: ...
#  vlen: ...
#  optional: ...

outputs:
- label: out0
  domain: stream
  dtype: float
#- label: ...
#  domain: ...
#  dtype: ...
#  vlen: ...
#  optional: ...

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
